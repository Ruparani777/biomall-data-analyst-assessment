
 Biomall Data Analyst Assignment – Summary Report

1. Data Cleaning & Preprocessing

Initial Issues Detected:

   Non-standard encodings like `â‚¹`, `Î¼`, and garbled characters in text.
 Inconsistent formatting in columns like `SKU/Pack/Price`, `Properties`, and unit measures (`μm`, `mL`, etc.).
   Price fields embedded inside strings or nested structures.

Steps Taken:

   Removed encoding artifacts and normalized symbols (e.g., replaced `â‚¹` with ₹ and `μ` with `micro`).
   Split complex fields such as `SKU/Pack/Price` using regular expressions to extract structured data like:

    * **SKU ID**
    * **Pack Size**
    * **Price (Numeric)**
  * Parsed and unpacked nested fields in `Properties` using `ast.literal_eval()` where appropriate.
  * Handled missing or invalid values:

    * Replaced missing prices with `NaN` and dropped where critical.
    * Standardized units across descriptions and cleaned column headers.

 2.Exploratory Data Analysis (EDA)

Key Insights:

  * Products span across a variety of categories (e.g., Chemicals, Labware, Cell Culture, etc.).
  * Price range is heavily right-skewed, with most items under ₹10,000 but outliers above ₹50,000.
  * Some categories contain unusually expensive products due to large pack sizes or specialty reagents.

Statistics:

  * **Total Unique Categories:** `X` (based on your data)
  * **Total Products:** `Y`
  * **Median Price:** ₹`Z`

Outliers Identified:

  * Specific SKUs with much higher prices—these are visualized in the Top 5 chart.

 3. Visualizations Included

* `price_distribution.png`: Histogram showing overall price skew.
* `top5_expensive_products.png`: Top 5 costliest products by name.
* `boxplot_price_by_category.png`: Category-wise price distribution with outliers.

These visualizations were built using `matplotlib`, `seaborn`, and `pandas`.

 4. Optional Bonus – Data Enrichment

* Extracted numerical values from textual description fields (e.g., concentration in `%`, volume in `mL`, or dimensions in `μm`) where available.
* Derived a new column: **price per unit** (where pack size and quantity were clear).

 5. Tools & Libraries Used

* `pandas`, `numpy`, `seaborn`, `matplotlib`
* Optional: `re`, `ast` for parsing and regex-based cleaning



Assumptions Made

* Category and pricing columns were inferred based on partial string matches (`'Category'`, `'Price'`, etc.).
* Where `SKU/Pack/Price` format was ambiguous, only entries with clear numeric price were retained.
* For missing units (e.g., no `μL` or `mL`), assumptions were not made to avoid misrepresentation.

---

 Challenges Faced

Non-standard formatting in Excel made it harder to parse structured data.
Missing and inconsistent values required a flexible preprocessing pipeline.
Plotting failed when some categories had very few items, requiring filtering logic.

 Deliverables

 `cleaned_sigma_dataset.csv`: Cleaned and structured dataset.
 `eda_visualization.ipynb`: Full code with charts and EDA.
 `summary_report.md`: This file.
`requirements.txt`: All required Python packages.
 `README.md`: Project summary with usage instructions.


Le
